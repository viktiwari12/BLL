OOPS
Basics and need of OOPs 
Classes and Objects (Encapsulation)
    Person
	Reference vs Instance
	Swap1 - p1 & p2 swap via temp
	Swap2 - p1 and p2 swap via properties
	Games in Swap2 - new p1 and p2
Miscellaneous
    static & non-static - BankAccount story
        static vs non-static data members
        static fns - no "this", only static data members
        non-static fns - this, all data members
    Inheritance and Polymorphism
        P, C - all cases except abstract and final
    final - variables and data members
    Object creation - steps, this, this chaining
        Space allocation - java Defaults
        Parsing - Non-dynamic Class creator Defaults
        Default ctor - Dynamic class creator Defaults
        Parametrized ctor - Class user Defaults
------------------------------------------------------------------------------------
    super and override, ctor chaining
    access modifiers - private, public, default, protected
    inheritance and static fns
abstract & final - fns, class
interfaces - comparator, comparable, iterator, iterable, toString, equals, hashcode
Integer vs int, Integer[] vs int[]
Jargon - encapsulation, data hiding, abstraction, inheritance, polymorphism,

Extra
    generics & overloading
    exceptions & namespaces

    Lambda Functions (Optional)
